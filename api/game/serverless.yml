service: mastermind-game-api
    
custom: 
  boto3Layer: arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-boto3:48
  lambdaPowertoolsLayer: arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-aws-lambda-powertools:48
  stage: ${opt:stage, self:provider.stage, dev}
  region: ${opt:region, self:provider.region, us-east-1}
  tracingStages:
    prod: true
    staging: true
    dev: false
  tracingStage: ${self:custom.tracingStages.${self:custom.stage}, self:custom.tracingStages.dev}
  resourcesStages:
    prod: prod
    staging: prod
    dev: dev
  resourcesStage: ${self:custom.resourcesStages.${self:custom.stage}, self:custom.resourcesStages.dev}
  alerts:
    stages:
      - prod
      - staging
    alarms:
      - functionErrors
      - functionThrottles
      - functionInvocations
      - functionDuration
    topics:
      alarm:
        topic: ${self:service}-${opt:stage, self:provider.stage}-alerts-alarm
        notifications:
          - protocol: https
            endpoint: https://global.sns-api.chatbot.amazonaws.com

package: 
  excludeDevDependencies: true
  exclude:
    - __init__.py
    - tests/**
    - requirements*.txt
    - node_modules/**
    - package.json
    - .gitignore
    - package-lock.json


plugins:
  - serverless-plugin-aws-alerts

provider: 
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1

  logs:
    restApi: 
      level: ERROR

  apiGateway:
    metrics: true
    restApiId: !ImportValue ${self:custom.stage}-ApiGatewayRestApiId
    restApiRootResourceId: !ImportValue ${self:custom.stage}-ApiGatewayRestApiRootResourceId

  memorySize: 640
  timeout: 6
  tracing:
    apiGateway: ${self:custom.tracingStage}
    lambda: ${self:custom.tracingStage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - !ImportValue ${self:custom.resourcesStage}-DynamoDBTableArn

  environment:
    DYNAMODB_TABLE_NAME: !ImportValue ${self:custom.resourcesStage}-DynamoDBTableName

functions:  
  createGame:
    handler: lambdas/create_game.handler
    layers:
      - ${self:custom.lambdaPowertoolsLayer}
      - ${self:custom.boto3Layer}
    events:
      - http:
          path: game
          method: POST
          cors: true
